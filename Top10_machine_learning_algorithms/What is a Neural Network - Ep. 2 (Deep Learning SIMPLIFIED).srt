1
00:00:02,840 --> 00:00:07,040
如果你一直忽略神经网络，因为你觉得它们太难理解

2
00:00:07,040 --> 00:00:11,040
或者认为你不需要他们……伙计，我有一个礼物给你！

3
00:00:11,040 --> 00:00:16,080
在这个视频中，您将学习没有任何数学或代码的神经网络 -

4
00:00:16,080 --> 00:00:19,200
只是介绍到它们是什么，以及它们如何工作。

5
00:00:19,200 --> 00:00:23,280
我的愿望是，你能得到一个想法：它们为什么是如此重要的工具。

6
00:00:23,280 --> 00:00:24,560
让我们开始吧。

7
00:00:24,560 --> 00:00:25,920


8
00:00:25,920 --> 00:00:30,360
你需要知道的第一件事就是，深度学习是关于神经网络的。

9
00:00:30,360 --> 00:00:34,360
神经网络的结构是像任何其他种类的网络;

10
00:00:34,360 --> 00:00:38,160
有联结网络的节点，即所谓的神经元，

11
00:00:38,160 --> 00:00:40,560
还有连接在一起的边缘。

12
00:00:40,560 --> 00:00:44,500
神经网络的主要功能是接收一组输入，

13
00:00:44,500 --> 00:00:47,580
逐步执行复杂的计算，

14
00:00:47,580 --> 00:00:50,380
然后通过输出解决问题。

15
00:00:50,380 --> 00:00:53,800
神经网络被用于许多不同的应用，

16
00:00:53,800 --> 00:00:57,140
但在这个系列中，我们将专注于分类。

17
00:00:57,140 --> 00:01:01,520
如果你想了解神经网络，包括数学更详细一点

18
00:01:01,520 --> 00:01:08,360
我最喜欢的两个资源是迈克尔·尼尔森的书，和安德鲁伍的课。

19
00:01:08,360 --> 00:01:15,100
在我们更多地谈论神经网络之前，我会给你关于分类问题的简要概述。

20
00:01:15,100 --> 00:01:19,000
分类是给事物分组的过程，

21
00:01:19,000 --> 00:01:23,160
只使用一些基本的数据特征来描述它们。

22
00:01:23,160 --> 00:01:26,040
当前有许多的分类器可以用 -

23
00:01:26,040 --> 00:01:32,340
像 Logistic 回归，支持向量机，朴素贝叶斯，当然，还有神经网络。

24
00:01:32,340 --> 00:01:38,240
一个分类器的触发，通常称为激活，产生一个得分。

25
00:01:38,240 --> 00:01:42,400
例如，假设您需要预测病人是生病还是健康的，

26
00:01:42,400 --> 00:01:46,720
并且你有他们的身高，体重和体温这些所有信息。

27
00:01:46,720 --> 00:01:53,240
分类器将收到这些有关病人的信息，处理它，并且得出一个信心评分。

28
00:01:53,240 --> 00:01:59,600
高分就意味着很高的信心病人是生病的，而一个低分将表明，他们是健康的。

29
00:02:01,900 --> 00:02:05,960
神经网络用于分类任务中，一个对象可以回落

30
00:02:05,960 --> 00:02:09,080
到至少两个不同的类别中的其中一个。

31
00:02:09,080 --> 00:02:11,820
不像其他网络，比如社交网络

32
00:02:11,820 --> 00:02:15,120
神经网络是高度结构化的，并且引入多个层。

33
00:02:15,120 --> 00:02:17,300
第一层是输入层，

34
00:02:17,300 --> 00:02:19,320
最后一层是输出层，

35
00:02:19,320 --> 00:02:23,040
以及两者之间的所有层被称为隐藏层。

36
00:02:23,040 --> 00:02:28,560
神经网络可以被看作是在分层网络中分类器交织在一起的结果。

37
00:02:28,560 --> 00:02:33,920
这是因为，在隐藏层和输出层的每个节点都有其自己的分类器。

38
00:02:33,920 --> 00:02:35,760
拿这个节点来说 -

39
00:02:35,760 --> 00:02:39,440
它得到来自输入层的输入，并激活。

40
00:02:39,440 --> 00:02:45,040
然后其得分被传递作为输入，用于进一步激活下一个隐藏层。

41
00:02:45,040 --> 00:02:45,940
所以，

42
00:02:45,940 --> 00:02:50,100
让我们来看看这在整个网络中是如何点到点进行的。

43
00:02:50,100 --> 00:02:53,020
一组输入被传递到第一个隐藏层，

44
00:02:53,020 --> 00:02:56,720
从该层的激活被传递到下一个层，诸如此类，

45
00:02:56,720 --> 00:02:58,960
直到到达输出层，

46
00:02:58,960 --> 00:03:04,480
其中，分类的结果由每个节点的得分决定。

47
00:03:04,480 --> 00:03:07,120
它们发生在每组数据输入时。

48
00:03:07,120 --> 00:03:09,920
这是另一个...

49
00:03:09,920 --> 00:03:11,460
像这样。

50
00:03:11,460 --> 00:03:16,500
这一系列从输入开始的事件，其中每个激活被发送到下一个层，

51
00:03:16,500 --> 00:03:18,840
再接下来，一路输出，

52
00:03:18,840 --> 00:03:22,560
被称为正向传播（forward propagation），或 forward prop。

53
00:03:22,560 --> 00:03:26,760
正向传播是神经网络对一组输入进行分类的方法。

54
00:03:27,360 --> 00:03:29,960
您是否想了解更多关于神经网络？

55
00:03:29,960 --> 00:03:33,000
请评论，让我知道你的想法？

56
00:03:35,060 --> 00:03:41,860
第一个神经网络是出于需要解决早期分类器（感知器）的不准确之处。

57
00:03:41,860 --> 00:03:45,260
它表明，通过使用感知的分层网络，

58
00:03:45,260 --> 00:03:48,340
预测的准确性可被改善。

59
00:03:48,340 --> 00:03:54,380
因此，神经网络的这个新品种被称为多层感知或 MLP。

60
00:03:54,380 --> 00:03:59,480
此后，神经网络内节点被更强大的分类感知器取代，

61
00:03:59,480 --> 00:04:01,240
但名字 MLP 被保留下来。

62
00:04:05,100 --> 00:04:07,260
再看正向传播。

63
00:04:07,260 --> 00:04:11,660
每个节点具有相同的分类器，其中没有随机性;

64
00:04:11,660 --> 00:04:15,160
如果你重复输入，你会得到相同的输出。

65
00:04:15,160 --> 00:04:19,060
因此，如果在隐藏层的每个节点接收的相同的输入，

66
00:04:19,060 --> 00:04:22,160
为什么它们没有都得到相同的值？

67
00:04:22,160 --> 00:04:27,680
其原因是，各组输入由唯一权重和偏置修正。

68
00:04:27,680 --> 00:04:29,840
例如，对于该节点，

69
00:04:29,840 --> 00:04:32,800
第一个输入被权重 10 修改，

70
00:04:32,800 --> 00:04:38,240
第二个 由 5，第三个由 6，然后一个为 9
 的偏移量加入在顶部。

71
00:04:38,240 --> 00:04:42,620
每个边具有唯一的权重，并且每个节点具有唯一的偏移量。

72
00:04:42,620 --> 00:04:46,760
这意味着，用于每个激活的组合也是唯一的，

73
00:04:46,760 --> 00:04:48,980
这解释了为什么节点生成的得分不同。

74
00:04:50,780 --> 00:04:56,540
你可能已经猜到了神经网络的预测精度取决于其权重和偏移量。

75
00:04:56,540 --> 00:04:58,700
我们希望该精度变高，

76
00:04:58,700 --> 00:05:03,480
这意味着我们想要的神经网络每一次单独预测一个值，该值是尽可能接近实际的输出，

77
00:05:03,480 --> 00:05:05,460


78
00:05:05,460 --> 00:05:09,240
改善神经网络的准确性的过程被称为训练，

79
00:05:09,240 --> 00:05:12,440
就像其他机器学习方法一样。

80
00:05:12,440 --> 00:05:15,320
下面又是正向传播 -

81
00:05:15,320 --> 00:05:21,220
要训练神经网络，正向传播的输出要和已知的正确输出做比较

82
00:05:21,220 --> 00:05:24,300
并且计算两者的差异值。

83
00:05:24,300 --> 00:05:31,660
训练的关键是在数百万的训练样本中，使该值尽可能小。

84
00:05:31,660 --> 00:05:35,660
要做到这一点，网络需要一步一步的调整权重和偏移

85
00:05:35,660 --> 00:05:39,580
直到预测与正确的输出紧密匹配。

86
00:05:39,580 --> 00:05:45,580
一旦训练良好，神经网络有可能每次准确预测

87
00:05:45,580 --> 00:05:47,820
这是一个简单地说一个神经网络。

88
00:05:50,120 --> 00:05:52,180
在这一点上，你可能想知道;

89
00:05:52,180 --> 00:05:56,820
为什么要创建和训练一个分类器网络来执行例如分类的任务，

90
00:05:56,820 --> 00:06:00,580
一个独立的分类器可以做的很好吗？

91
00:06:00,580 --> 00:06:05,940
答案涉及复杂的模式，我们将在接下来的视频中看到的问题。

